#include <ESP8266WiFi.h> // Gunakan <WiFi.h> jika menggunakan ESP32
#include <DHT.h>

// Pin dan tipe sensor DHT
#define DHTPIN D2      // Pin data DHT11
#define DHTTYPE DHT11  // Tipe sensor DHT11

// Konfigurasi WiFi
const char* ssid = "d";         // Ganti dengan SSID WiFi Anda
const char* password = "dd"; // Ganti dengan password WiFi Anda

// URL Web App dari Google Apps Script
const char* scriptUrl = "https://script.google.com/macros/s//exec"; // Ganti dengan URL Web App Anda

DHT dht(DHTPIN, DHTTYPE); // Inisialisasi sensor DHT

WiFiClientSecure client; // Gunakan koneksi HTTPS

void setup() {
    Serial.begin(115200);
    delay(10);

    // Hubungkan ke WiFi
    Serial.println("Menghubungkan ke WiFi...");
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }

    Serial.println("\nWiFi terhubung!");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());

    dht.begin(); // Mulai sensor DHT

    // Konfigurasikan untuk koneksi HTTPS
    client.setInsecure(); // Nonaktifkan validasi sertifikat (untuk server Google Apps Script)
}

void sendData(const char* mode) {
    float temperature = dht.readTemperature(); // Baca suhu
    temperature = temperature - 2.1;
    float humidity = dht.readHumidity();      // Baca kelembapan

    // Periksa apakah data valid
    if (isnan(temperature) || isnan(humidity)) {
        Serial.println("Gagal membaca data dari sensor DHT!");
        return;
    }

    // Bangun URL dengan parameter
    String url = String(scriptUrl) + "?mode=" + mode + "&temperature=" + temperature + "&humidity=" + humidity;

    Serial.print("Mengirim data ke: ");
    Serial.println(url);

    // Hubungkan ke Google Apps Script
    if (client.connect("script.google.com", 443)) {
        // Kirim permintaan HTTP GET
        client.println(String("GET ") + url + " HTTP/1.1");
        client.println("Host: script.google.com");
        client.println("Connection: close");
        client.println();

        // Tampilkan respons dari server
        while (client.available()) {
            String line = client.readStringUntil('\n');
            Serial.println(line);
        }

        client.stop(); // Tutup koneksi
    } else {
        Serial.println("Gagal terhubung ke server!");
    }
}

void loop() {
    // Kirim data real-time ke satu sel tetap
    sendData("realtime");
    delay(10000); // Tunggu 10 detik

    // Kirim data historis (tambahkan baris baru)
    sendData("historical");
    delay(60000); // Tunggu 1 menit sebelum siklus ulang
}
